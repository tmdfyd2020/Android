- 애니메이션 사용하기 -

○ 애니메이션 동작 과정
  ○ 애니메이션이 어떻게 동작하는지를 XML로 정의한다.
  ○ XML을 로딩하며 애니메이션 객체로 만든다.
  ○ 뷰에 애니메이션을 적용하여 동작시킨다.
  
○ 대상
  ○ 뷰 : View는 위젯이나 레이아웃을 모두 포함한다.
    예를 들어, 텍스트뷰나 리니어 레이아웃에 애니메이션을 적용할 수 있다.
  ○ 그리기 객체 : 다양한 드로어블에 애니메이션을 적용할 수 있다.
    ShapeDrawalbe은 캔버스에 그릴 도형을 지정할 수 있으며, BitmapDrawable은 비트맵 이미지를 지정할 수 있다.

○ 효과
  ○ 위치 이동 : Tanslate로 정의한 액션은 대상의 위치를 이동시키는데 사용되는 효과이다.
  ○ 확대/축소 : Scale로 정의한 액션은 대상의 크기를 키우거나 줄이는데 사용되는 효과이다.
  ○ 회전 : Rotate로 정의한 액션은 대상을 회전시키는데 사용되는 효과이다.
  ○ 투명도 : Alpha로 정의한 액션은 대상의 투명도를 조절하는데 사용되는 효과이다.
  
○ 트윈 애니메이션으로 속도 조절하기
  ○ Interpolator : 애니메이션 효과가 지속되는 동안 빠르거나 느리게 효과가 진행되도록 만드는 방법
    ○ accelerate_interpolator : 애니메이션 효과를 점점 빠르게 나타나도록 만든다.
    ○ decelerate_interpolator : 애니메이션 효과를 점점 느리게 나타나도록 만든다.
    ○ accelerate_decelerate_interpolator : 애니메이션 효과를 점점 빠르다가 느리게 나타나도록 만든다.
    ○ anticipate_interpolator : 애니메이션 효과를 시작 위치에서 조금 뒤로 당겼다가 시작하도록 만든다.
    ○ overshoot_interpolator : 애니메이션 효과를 종료 위치에서 조금 지나쳤다가 종료되도록 만든다.
    ○ anticipate_overshoot_interploator : 애니메이션 효과를 시작 위치에서 조금 뒤로 당겼다가 시작한 후 종료 위치에서 조금 지나쳤다가 종료되도록 만든다.
    ○ bounce_interpolator : 애니메이션 효과를 종료 위치에서 튀도록 만든다.
    
    ○ 이러한 정보들은 각각의 액션에 설정할 수도 있고 애니메이션 집합에 설정할 수도 있다.
      만약 각각의 액션에 다른 인터폴레이터를 설정하는 경우에는 shareInterpolator 속성을 false로 하면 된다.
      
    ○ 사용자에게 화면이 표시되는 시점에 애니메이션이 시작하도록 만들고 싶으면
      애니메이션 시작점은 onWindowFocusChanged() 메서드가 호출되는 시점이어야 한다
      따라서 onWindowFocusChanged() 메서드 내에서 파라미터로 전달되는 hasFocus 변수의 값이 true일 경우에 각각의 애니메이션 객체에 대해 start() 메서드를 호출함으로써 애니메이션 시작
      
    ○ 애니메이션이 언제 시작했는지 또는 끝났는지에 대한 정보는 AnimationListener 객체를 설정
      ○ public void onAnimationStart(Animation animation) : 애니메이션이 시작되기 전에 호출된다.
      ○ public void onAnimationEnd(Animation animation) : 애니메이션이 끝났을 때 호출된다.
      ○ public void onAnimationRepeat(Animation animation) : 애니메이션이 반복될 때 호출된다.
