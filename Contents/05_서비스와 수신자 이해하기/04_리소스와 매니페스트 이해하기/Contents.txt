○ 안드로이드 : 자바 코드 + 리소스
  ○ 자바 코드 : 앱의 흐름과 기능을 정의
  ○ 리소스 : 레이아웃이나 이미지처럼 사용자에게 보여주기 위해 사용하는 파일이나 데이터를 관리
  
[ 매니페스트 ]

○ 설치된 앱의 구성 요소가 어떤 것인지, 어떤 권한이 부여되었는지 시스템에 알려준다.
○ 매니페스트의 주요 역할들
  ○ 앱의 패키지 이름 지정
  ○ 앱 구성 요소에 대한 정보 등록 (액티비티, 서비스, 브로드캐스트 수신자, 내용 제공자)
  ○ 각 구성 요소를 구현하는 클래스 이름 지정
  ○ 앱이 가져야 하는 권한에 대한 정보 등록
  ○ 다른 앱이 접근하기 위해 필요한 권한에 대한 정보 등록
  ○ 앱 개발 과정에서 프로파일링을 위해 필요한 instrucmentation 클래스 등록
  ○ 앱에 필요한 안드로이드 API의 레벨 정보 등록
  ○ 앱에서 사용하는 라이브러리 리스트
○ <application> 태그는 <manifest> 태그 안에 반드시 하나만 있어야 한다.

○ 메인 액티비티는 항상 아래와 같은 형태로 추가되어야 한다.
  <activity android:name="org.techtown.hello.HelloActivity"
      android:label="@string/app_name">
    <intent-filter>
      <action android:name="android.intent.action.MAIN" /> ☆
      <category android:"android.intent.category.LAUNCHER" /> ☆
    </intent-filter>
  </activity>
  
[ 리소스의 사용 ]

○ 리소스를 자바 코드와 분리하는 이유는 이해하기 쉽고 유지관리가 용이하기 때문이다.
○ 프로젝트를 만든 후 /app/res/ 폴더 이외에 /app/assets/ 폴더를 따로 만들 수 있는데 두 가지 모두 리소스라고 할 수 있으며 대부분 /app/res/ 폴더 밑에서 관리된다.
○ 리소스와 에셋의 차이점
  ○ asset : 동영상이나 웹페이지와 같이 용량이 큰 데이터를 의미
  ○ 리소스는 빌드되어 설치 파일에 추가되지만 에셋은 빌드되지 않는다.
○ /app/res/values : 문자열이나 기타 기본 데이터 타입에 해당하는 정보들이 저장된다.
○ /app/res/drawable : 이미지를 저장
○ 저장되어 있는 리소스 정보를 코드에서 사용할 때는 Resources 객체의 Context.getResources() 함수를 호출해야 한다.

[ 스타일과 테마 ]

○ 여러 가지 속성들을 한꺼번에 모아서 정의한 것 e.g. 대화상자
○ 스타일을 직접 정의하여 사용하고 싶다면 /app/res/values/styles.xml 파일을 만들어야 한다.











