- 데이터베이스와 테이블 만들기 -

○ 데이터베이스 = 여러 개의 테이블을 담는 그릇

○ 데이터베이스 만들기
  public abstract SQLiteDatabase openOrCreateDatabase (String name, int mode, SQLiteDatabase.CursorFactory factory)
  ○ parameter 1 : 데이터베이스 이름, 데이터베이스 파일의 이름으로도 사용된다.
  ○ parameter 2 : 사용 모드 -> MODE_PRIVATE 상수를 넣어주자!
  ○ parameter 3 : NULL이 아닌 객체를 지정할 경우 쿼리의 결과 값으로 반환되는 데이터를 참조하는 커서를 만들어낼 수 있는 개체가 전달된다.
  □ openOrCreateDatabase() 메서드를 호출했을 때 반환되는 SQLiteDatabase 객체는 name 변수로 지정한 데이터베이스에 접근할 수 있는 메서드를 정의하고 있다.
      그래서 이 메서드로 데이터베이스를 열거나 만든 후에는 SQLiteDatebase 객체를 참조해야 한다.
      
○ 데이터베이스 삭제하기
  public abstract boolean deleteDatabase (String name)
  
○ 데이터베이스를 만들고 난 다음 SQL문을 실행할 때 사용되는 함수
  public void execSQL (String sql) throws SQLException
  □ 테이블을 만드는 것뿐만 아니라 레코드 추가처럼 표준 SQL을 사용하는 여러 가지 데이터 처리가 가능하다.
  
○ 새로 정의하는 칼럼의 데이터 타입이 칼럼의 데이터 타입이 칼럼의 데이터 값에 일괄적으로 적용되는 다른 데이터베이스와는 달리
    SQLite는 각각의 레코드별로 입력되는 데이터의 타입을 다르게 넣을 수 있다.
      따라서, 칼럼의 데이터 타입은 참조용으로만 사용되며, 레코드를 입력할 때 어떤 타입의 데이터를 넣어도 오류가 발생하지 않는다.
  ○ 칼럼 타입과 설명
         칼럼 타입        |             설명
    text, varchar           문자열
    smallint, integer        정수 (2바이트 또는 4바이트)
    real, float, double     부동소수 (4바이트 또는 8바이트)
    boolean                 true 또는 false
    date, time, timestamp   시간 (날짜, 시간, 날짜+시간)
    blob, binary            바이너리
 
