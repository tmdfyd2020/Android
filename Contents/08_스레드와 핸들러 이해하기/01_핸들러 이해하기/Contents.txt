- 핸들러 이해하기 -

○ 같은 프로세스 안에서 일련의 기능이 순서대로 실행될 때 대부분은 큰 문제가 없지만, 대기 시간이 길어지는 네트워크 요청 등의 기능을 수행할 때는
  화면에 보이는 UI도 멈춤 상태로 있게 되는 문제가 생길 수 있다.
○ 이런 문제를 해결하려면 하나의 프로세스 안에서 여러 개의 작업이 동시 수행되는 멀티 스레드 방식을 사용하게 된다.

○ 스레드 = 동시 작업
○ 현재 수행 중인 작업 이외의 기능을 동시에 처리할 때 새로운 스레드를 만들어서 처리한다. -> 효율적인 처리
○ 하지만 동시에 리소스에 접근할 때 데드락이 발생하여 시스템이 비정상적으로 동작할 수도 있다.

○ 지연 시간이 길어질 수 있는 앱을 사용할 때 안드로이드가 제공하는 두 가지 시나리오
  ○ 시나리오 1 - 서비스 사용하기
    백그라운드 작업은 서비스로 실행하고 사용자에게는 알림 서비스로 알려준다. 만약 메인 액티비티로 결과 값을 전달하고 이를 이용해서 다른 작업을
    수행하고자 한다면 브로드캐스팅으로 결과 값을 전달할 수 있다.
  ○ 시나리오 2 - 스레드 사용하기
    스레드는 같은 프로세스 안에 있기 때문에 작업 수행의 결과를 바로 처리할 수 있다. 그러나 UI 객체는 직접 접근할 수 없으므로 핸들러 객체를 사용한다.
    UI를 처리할 때 사용되는 기본 스레드를 메인 스레드라고 부르고, 메인 스레드에서 이미 UI를 접근하고 있으므로 새로 생성한 다른 스레드에서 핸들러 객체를 사용해서
    메시지를 전달함으로써 메인 스레드에서 처리하도록 만들 수 있다.
